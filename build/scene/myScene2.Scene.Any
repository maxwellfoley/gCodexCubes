// -*- c++ -*-
{
    name = "My Scene 2 (Cornell box)";
    
    models = {
       redWallModel = ArticulatedModel::Specification {
            filename = "model/crate/crate-unique-materials.obj";
            preprocess = {
                setMaterial(all(), Color3(1, 0, 0));
								transformGeometry(all(), Matrix4::scale(0.2, 10.0, 10.0));
            };
       };
			 
			 whiteWallModel = ArticulatedModel::Specification {
						filename = "model/crate/crate-unique-materials.obj";
						preprocess = {
								setMaterial(all(), Color3(1, 1, 1));
							 transformGeometry(all(), Matrix4::scale(0.2, 10.0, 10.0));
						};
			 };
			 
			 greenWallModel = ArticulatedModel::Specification {
						filename = "model/crate/crate-unique-materials.obj";
						preprocess = {
								setMaterial(all(), Color3(0, 1, 0));
							 transformGeometry(all(), Matrix4::scale(0.2, 10.0, 10.0));
						};
			 };
			 
			 
			 frontCubeModel = ArticulatedModel::Specification {
						filename = "model/crate/crate-unique-materials.obj";
						preprocess = {
							 setMaterial("crate/left", Color3(0, 1, 0));
							 setMaterial("crate/right", Color3(0, 1, 0));
							 setMaterial("crate/front", Color3(1, 1, 1));
							 setMaterial("crate/back", Color3(1, 1, 1));
							 setMaterial("crate/top", Color3(1, 1, 1));
							 setMaterial("crate/bottom", Color3(1, 1, 1));

							 transformGeometry(all(), Matrix4::scale(2.0, 2.0, 2.0));
						};
			 };
			 
			 backCubeModel = ArticulatedModel::Specification {
						filename = "model/crate/crate-unique-materials.obj";
						preprocess = {
							setMaterial("crate/left", Color3(1, 0, 0));
							setMaterial("crate/right", Color3(1, 0, 0));
							setMaterial("crate/front", Color3(1, 1, 1));
							setMaterial("crate/back", Color3(1, 1, 1));
							setMaterial("crate/top", Color3(1, 1, 1));
							setMaterial("crate/bottom", Color3(1, 1, 1));
							 transformGeometry(all(), Matrix4::scale(2.0, 4.0, 1.0));
						};
			 };
    };
    
    entities = {
       skybox = Skybox {
            texture = "cubemap/whiteroom/whiteroom-*.png";
       };
       
       sun = Light {
            attenuation = ( 0, 0, 1 );
            bulbPower = Power3(4e+006);
            frame = CFrame::fromXYZYPRDegrees(0, 5, 0, 0, 0, 0);
            shadowMapSize = Vector2int16(2048, 2048);
            spotHalfAngleDegrees = 5;
            rectangular = true;
            type = "SPOT";
        };

        backWall = VisibleEntity {
            model = "whiteWallModel";
            frame = CFrame::fromXYZYPRDegrees(0, 0, -5, 90, 0, 0);
        };

				leftWall = VisibleEntity {
            model = "redWallModel";
            frame = CFrame::fromXYZYPRDegrees(-5, 0, 0, 0, 90, 0);
        };

				rightWall = VisibleEntity {
            model = "greenWallModel";
            frame = CFrame::fromXYZYPRDegrees(5, 0, 0, 0, 90, 0);
        };        
				
				bottomWall = VisibleEntity {
            model = "whiteWallModel";
            frame = CFrame::fromXYZYPRDegrees(0, -5, 0, 0, 0, 90);
        };

				topWall = VisibleEntity {
            model = "whiteWallModel";
            frame = CFrame::fromXYZYPRDegrees(0, 5, 0, 0, 0, 90);
        }; 
				
				frontCube = VisibleEntity {
						model = "frontCubeModel";
						frame = CFrame::fromXYZYPRDegrees(.2, -4, .2, 30, 0, 0);
				}; 

				backCube = VisibleEntity {
						model = "backCubeModel";
						frame = CFrame::fromXYZYPRDegrees(-2, -3, -2, 16, 0, 0);
				}; 
				
								
				camera = Camera {
            frame = CFrame::fromXYZYPRDegrees(0, 0, 20);
        };
    };
};